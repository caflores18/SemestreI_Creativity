

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Nov 21 16:10:04 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    24  0000                     
    25                           ; Version 2.10
    26                           ; Generated 31/07/2019 GMT
    27                           ; 
    28                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4550 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     _TRISAbits	set	3986
    60  0000                     _ADRESL	set	4035
    61  0000                     _ADRESH	set	4036
    62  0000                     _ADCON2bits	set	4032
    63  0000                     _ADCON0bits	set	4034
    64  0000                     _CCPR1L	set	4030
    65  0000                     _CCP1CONbits	set	4029
    66  0000                     _CCPR2L	set	4027
    67  0000                     _TMR2	set	4044
    68  0000                     _T2CONbits	set	4042
    69  0000                     _PR2	set	4043
    70  0000                     _CCP2CONbits	set	4026
    71  0000                     _TXREG1	set	4013
    72  0000                     _RCREG1	set	4014
    73  0000                     _PIR1bits	set	3998
    74  0000                     _RCSTA1bits	set	4011
    75  0000                     _BAUDCONbits	set	4024
    76  0000                     _TXSTA1bits	set	4012
    77  0000                     _SPBRG	set	4015
    78  0000                     _TRISCbits	set	3988
    79  0000                     _TRISBbits	set	3987
    80  0000                     _OSCCON	set	4051
    81  0000                     _ADCON1bits	set	4033
    82                           
    83                           	psect	smallconst
    84  000800                     __psmallconst:
    85                           	opt callstack 0
    86  000800  00                 	db	0
    87  000801                     STR_1:
    88  000801  2C                 	db	44
    89  000802  00                 	db	0
    90                           
    91                           ; #config settings
    92  000803  00                 	db	0	; dummy byte at the end
    93  0000                     
    94                           	psect	cinit
    95  00098E                     __pcinit:
    96                           	opt callstack 0
    97  00098E                     start_initialization:
    98                           	opt callstack 0
    99  00098E                     __initialization:
   100                           	opt callstack 0
   101  00098E                     end_of_initialization:
   102                           	opt callstack 0
   103  00098E                     __end_of__initialization:
   104                           	opt callstack 0
   105  00098E  900B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   106  000990  920B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   107  000992  0E00               	movlw	low (__Lsmallconst shr (0+16))
   108  000994  6EF8               	movwf	tblptru,c
   109  000996  0E08               	movlw	high __Lsmallconst
   110  000998  6EF7               	movwf	tblptrh,c
   111  00099A  0100               	movlb	0
   112  00099C  EF32  F004         	goto	_main	;jump to C main() function
   113                           
   114                           	psect	cstackCOMRAM
   115  000001                     __pcstackCOMRAM:
   116                           	opt callstack 0
   117  000001                     ??_low_isr:
   118  000001                     
   119                           ; 1 bytes @ 0x0
   120  000001                     	ds	1
   121  000002                     ?_ADCvalue:
   122                           	opt callstack 0
   123  000002                     receive@recibido:
   124                           	opt callstack 0
   125  000002                     send@enviarpc:
   126                           	opt callstack 0
   127                           
   128                           ; 1 bytes @ 0x1
   129  000002                     	ds	1
   130  000003                     printf@PointString:
   131                           	opt callstack 0
   132                           
   133                           ; 2 bytes @ 0x2
   134  000003                     	ds	1
   135  000004                     ??_ADCvalue:
   136                           
   137                           ; 1 bytes @ 0x3
   138  000004                     	ds	1
   139  000005                     ??_printf:
   140                           
   141                           ; 1 bytes @ 0x4
   142  000005                     	ds	1
   143  000006                     ADCvalue@valorADC:
   144                           	opt callstack 0
   145                           
   146                           ; 2 bytes @ 0x5
   147  000006                     	ds	1
   148  000007                     printf@i:
   149                           	opt callstack 0
   150                           
   151                           ; 1 bytes @ 0x6
   152  000007                     	ds	1
   153  000008                     main@entrada:
   154                           	opt callstack 0
   155                           
   156                           ; 1 bytes @ 0x7
   157  000008                     	ds	1
   158  000009                     main@valorADC:
   159                           	opt callstack 0
   160                           
   161                           ; 2 bytes @ 0x8
   162  000009                     	ds	2
   163                           
   164 ;;
   165 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   166 ;;
   167 ;; *************** function _main *****************
   168 ;; Defined at:
   169 ;;		line 19 in file "PruebaADC.c"
   170 ;; Parameters:    Size  Location     Type
   171 ;;		None
   172 ;; Auto vars:     Size  Location     Type
   173 ;;  valorADC        2    8[COMRAM] unsigned int 
   174 ;;  entrada         1    7[COMRAM] unsigned char 
   175 ;; Return value:  Size  Location     Type
   176 ;;                  1    wreg      void 
   177 ;; Registers used:
   178 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   179 ;; Tracked objects:
   180 ;;		On entry : 0/0
   181 ;;		On exit  : 0/0
   182 ;;		Unchanged: 0/0
   183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   184 ;;      Params:         0       0       0       0       0       0       0       0       0
   185 ;;      Locals:         3       0       0       0       0       0       0       0       0
   186 ;;      Temps:          0       0       0       0       0       0       0       0       0
   187 ;;      Totals:         3       0       0       0       0       0       0       0       0
   188 ;;Total ram usage:        3 bytes
   189 ;; Hardware stack levels required when called:    4
   190 ;; This function calls:
   191 ;;		_ADCinit
   192 ;;		_ADCvalue
   193 ;;		_PWM_CCP1_init
   194 ;;		_PWM_CCP2_init
   195 ;;		_UARTinit
   196 ;;		_portInit
   197 ;;		_printf
   198 ;;		_receive
   199 ;;		_send
   200 ;; This function is called by:
   201 ;;		Startup code after reset
   202 ;; This function uses a non-reentrant model
   203 ;;
   204                           
   205                           	psect	text0
   206  000864                     __ptext0:
   207                           	opt callstack 0
   208  000864                     _main:
   209                           	opt callstack 27
   210  000864                     
   211                           ;PruebaADC.c: 20:     portInit();
   212  000864  ECD0  F004         	call	_portInit	;wreg free
   213                           
   214                           ;PruebaADC.c: 21:     UARTinit();
   215  000868  EC99  F004         	call	_UARTinit	;wreg free
   216                           
   217                           ;PruebaADC.c: 22:     PWM_CCP2_init();
   218  00086C  ECB1  F004         	call	_PWM_CCP2_init	;wreg free
   219                           
   220                           ;PruebaADC.c: 23:     PWM_CCP1_init();
   221  000870  ECBC  F004         	call	_PWM_CCP1_init	;wreg free
   222                           
   223                           ;PruebaADC.c: 24:     ADCinit();
   224  000874  EC5E  F004         	call	_ADCinit	;wreg free
   225  000878                     l124:
   226                           
   227                           ;PruebaADC.c: 26:         unsigned char entrada = receive();
   228  000878  EC8C  F004         	call	_receive	;wreg free
   229  00087C  6E08               	movwf	main@entrada^0,c
   230  00087E                     
   231                           ;PruebaADC.c: 27:         if (entrada == '1') {
   232  00087E  0E31               	movlw	49
   233  000880  1808               	xorwf	main@entrada^0,w,c
   234  000882  A4D8               	btfss	status,2,c
   235  000884  EF46  F004         	goto	u111
   236  000888  EF48  F004         	goto	u110
   237  00088C                     u111:
   238  00088C  EF3C  F004         	goto	l124
   239  000890                     u110:
   240  000890                     
   241                           ;PruebaADC.c: 28:             unsigned int valorADC = ADCvalue();
   242  000890  EC76  F004         	call	_ADCvalue	;wreg free
   243  000894  C002  F009         	movff	?_ADCvalue,main@valorADC
   244  000898  C003  F00A         	movff	?_ADCvalue+1,main@valorADC+1
   245  00089C                     
   246                           ;PruebaADC.c: 29:         send((valorADC >> 8));
   247  00089C  500A               	movf	(main@valorADC+1)^0,w,c
   248  00089E  ECA6  F004         	call	_send
   249  0008A2                     
   250                           ;PruebaADC.c: 30:             printf(",");
   251  0008A2  0E01               	movlw	low STR_1
   252  0008A4  6E03               	movwf	printf@PointString^0,c
   253  0008A6  0E08               	movlw	high STR_1
   254  0008A8  6E04               	movwf	(printf@PointString+1)^0,c
   255  0008AA  EC02  F004         	call	_printf	;wreg free
   256  0008AE                     
   257                           ;PruebaADC.c: 31:             send((unsigned char) valorADC);
   258  0008AE  5009               	movf	main@valorADC^0,w,c
   259  0008B0  ECA6  F004         	call	_send
   260  0008B4  EF3C  F004         	goto	l124
   261  0008B8  EF14  F000         	goto	start
   262  0008BC                     __end_of_main:
   263                           	opt callstack 0
   264                           
   265 ;; *************** function _receive *****************
   266 ;; Defined at:
   267 ;;		line 21 in file "UART.c"
   268 ;; Parameters:    Size  Location     Type
   269 ;;		None
   270 ;; Auto vars:     Size  Location     Type
   271 ;;  recibido        1    1[COMRAM] unsigned char 
   272 ;; Return value:  Size  Location     Type
   273 ;;                  1    wreg      unsigned char 
   274 ;; Registers used:
   275 ;;		wreg, status,2
   276 ;; Tracked objects:
   277 ;;		On entry : 0/0
   278 ;;		On exit  : 0/0
   279 ;;		Unchanged: 0/0
   280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   281 ;;      Params:         0       0       0       0       0       0       0       0       0
   282 ;;      Locals:         1       0       0       0       0       0       0       0       0
   283 ;;      Temps:          0       0       0       0       0       0       0       0       0
   284 ;;      Totals:         1       0       0       0       0       0       0       0       0
   285 ;;Total ram usage:        1 bytes
   286 ;; Hardware stack levels used:    1
   287 ;; Hardware stack levels required when called:    2
   288 ;; This function calls:
   289 ;;		Nothing
   290 ;; This function is called by:
   291 ;;		_main
   292 ;;		_scanf
   293 ;; This function uses a non-reentrant model
   294 ;;
   295                           
   296                           	psect	text1
   297  000918                     __ptext1:
   298                           	opt callstack 0
   299  000918                     _receive:
   300                           	opt callstack 28
   301  000918                     l31:
   302                           
   303                           ;UART.c: 23:     while (PIR1bits.RCIF == 0) {
   304  000918  AA9E               	btfss	158,5,c	;volatile
   305  00091A  EF91  F004         	goto	u21
   306  00091E  EF93  F004         	goto	u20
   307  000922                     u21:
   308  000922  EF8C  F004         	goto	l31
   309  000926                     u20:
   310  000926                     
   311                           ;UART.c: 26:     recibido = RCREG1;
   312  000926  CFAE F002          	movff	4014,receive@recibido	;volatile
   313  00092A                     
   314                           ;UART.c: 27:     RCREG1 = 0;
   315  00092A  0E00               	movlw	0
   316  00092C  6EAE               	movwf	174,c	;volatile
   317                           
   318                           ;UART.c: 28:     return recibido;
   319  00092E  5002               	movf	receive@recibido^0,w,c
   320  000930  0012               	return		;funcret
   321  000932                     __end_of_receive:
   322                           	opt callstack 0
   323                           
   324 ;; *************** function _printf *****************
   325 ;; Defined at:
   326 ;;		line 38 in file "UART.c"
   327 ;; Parameters:    Size  Location     Type
   328 ;;  PointString     2    2[COMRAM] PTR unsigned char 
   329 ;;		 -> STR_1(2), 
   330 ;; Auto vars:     Size  Location     Type
   331 ;;  i               1    6[COMRAM] unsigned char 
   332 ;; Return value:  Size  Location     Type
   333 ;;                  1    wreg      void 
   334 ;; Registers used:
   335 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   341 ;;      Params:         2       0       0       0       0       0       0       0       0
   342 ;;      Locals:         1       0       0       0       0       0       0       0       0
   343 ;;      Temps:          2       0       0       0       0       0       0       0       0
   344 ;;      Totals:         5       0       0       0       0       0       0       0       0
   345 ;;Total ram usage:        5 bytes
   346 ;; Hardware stack levels used:    1
   347 ;; Hardware stack levels required when called:    3
   348 ;; This function calls:
   349 ;;		_send
   350 ;; This function is called by:
   351 ;;		_main
   352 ;; This function uses a non-reentrant model
   353 ;;
   354                           
   355                           	psect	text2
   356  000804                     __ptext2:
   357                           	opt callstack 0
   358  000804                     _printf:
   359                           	opt callstack 27
   360  000804                     
   361                           ;UART.c: 39:     for (unsigned char i = 0; i < 255; i++) {
   362  000804  0E00               	movlw	0
   363  000806  6E07               	movwf	printf@i^0,c
   364  000808                     l949:
   365                           
   366                           ;UART.c: 40:         if (PointString[i] == ((void*)0)) {
   367  000808  5007               	movf	printf@i^0,w,c
   368  00080A  2403               	addwf	printf@PointString^0,w,c
   369  00080C  6E05               	movwf	??_printf^0,c
   370  00080E  0E00               	movlw	0
   371  000810  2004               	addwfc	(printf@PointString+1)^0,w,c
   372  000812  6E06               	movwf	(??_printf+1)^0,c
   373  000814  C005  FFF6         	movff	??_printf,tblptrl
   374  000818  C006  FFF7         	movff	??_printf+1,tblptrh
   375  00081C                     	if	0	;tblptru may be non-zero
   376  00081C                     	endif
   377  00081C                     	if	0	;tblptru may be non-zero
   378  00081C                     	endif
   379  00081C  0008               	tblrd		*
   380  00081E  50F5               	movf	tablat,w,c
   381  000820  0900               	iorlw	0
   382  000822  A4D8               	btfss	status,2,c
   383  000824  EF16  F004         	goto	u81
   384  000828  EF18  F004         	goto	u80
   385  00082C                     u81:
   386  00082C  EF1A  F004         	goto	l955
   387  000830                     u80:
   388  000830  EF31  F004         	goto	l47
   389  000834                     l955:
   390                           
   391                           ;UART.c: 43:             send(PointString[i]);
   392  000834  5007               	movf	printf@i^0,w,c
   393  000836  2403               	addwf	printf@PointString^0,w,c
   394  000838  6E05               	movwf	??_printf^0,c
   395  00083A  0E00               	movlw	0
   396  00083C  2004               	addwfc	(printf@PointString+1)^0,w,c
   397  00083E  6E06               	movwf	(??_printf+1)^0,c
   398  000840  C005  FFF6         	movff	??_printf,tblptrl
   399  000844  C006  FFF7         	movff	??_printf+1,tblptrh
   400  000848                     	if	0	;tblptru may be non-zero
   401  000848                     	endif
   402  000848                     	if	0	;tblptru may be non-zero
   403  000848                     	endif
   404  000848  0008               	tblrd		*
   405  00084A  50F5               	movf	tablat,w,c
   406  00084C  ECA6  F004         	call	_send
   407  000850                     
   408                           ;UART.c: 44:     }
   409  000850  2A07               	incf	printf@i^0,f,c
   410  000852  2807               	incf	printf@i^0,w,c
   411  000854  A4D8               	btfss	status,2,c
   412  000856  EF2F  F004         	goto	u91
   413  00085A  EF31  F004         	goto	u90
   414  00085E                     u91:
   415  00085E  EF04  F004         	goto	l949
   416  000862                     u90:
   417  000862                     l47:
   418  000862  0012               	return		;funcret
   419  000864                     __end_of_printf:
   420                           	opt callstack 0
   421                           
   422 ;; *************** function _send *****************
   423 ;; Defined at:
   424 ;;		line 31 in file "UART.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;  enviarpc        1    wreg     unsigned char 
   427 ;; Auto vars:     Size  Location     Type
   428 ;;  enviarpc        1    1[COMRAM] unsigned char 
   429 ;; Return value:  Size  Location     Type
   430 ;;                  1    wreg      void 
   431 ;; Registers used:
   432 ;;		wreg
   433 ;; Tracked objects:
   434 ;;		On entry : 0/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   438 ;;      Params:         0       0       0       0       0       0       0       0       0
   439 ;;      Locals:         1       0       0       0       0       0       0       0       0
   440 ;;      Temps:          0       0       0       0       0       0       0       0       0
   441 ;;      Totals:         1       0       0       0       0       0       0       0       0
   442 ;;Total ram usage:        1 bytes
   443 ;; Hardware stack levels used:    1
   444 ;; Hardware stack levels required when called:    2
   445 ;; This function calls:
   446 ;;		Nothing
   447 ;; This function is called by:
   448 ;;		_printf
   449 ;;		_main
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453                           	psect	text3
   454  00094C                     __ptext3:
   455                           	opt callstack 0
   456  00094C                     _send:
   457                           	opt callstack 28
   458                           
   459                           ;incstack = 0
   460                           ;send@enviarpc stored from wreg
   461  00094C  6E02               	movwf	send@enviarpc^0,c
   462  00094E                     l37:
   463                           
   464                           ;UART.c: 32:     while (TXSTA1bits.TRMT == 0) {
   465  00094E  A2AC               	btfss	172,1,c	;volatile
   466  000950  EFAC  F004         	goto	u11
   467  000954  EFAE  F004         	goto	u10
   468  000958                     u11:
   469  000958  EFA7  F004         	goto	l37
   470  00095C                     u10:
   471  00095C                     
   472                           ;UART.c: 35:     TXREG1 = enviarpc;
   473  00095C  C002  FFAD         	movff	send@enviarpc,4013	;volatile
   474  000960  0012               	return		;funcret
   475  000962                     __end_of_send:
   476                           	opt callstack 0
   477                           
   478 ;; *************** function _portInit *****************
   479 ;; Defined at:
   480 ;;		line 11 in file "Gpio.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;		None
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		wreg, status,2
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   494 ;;      Params:         0       0       0       0       0       0       0       0       0
   495 ;;      Locals:         0       0       0       0       0       0       0       0       0
   496 ;;      Temps:          0       0       0       0       0       0       0       0       0
   497 ;;      Totals:         0       0       0       0       0       0       0       0       0
   498 ;;Total ram usage:        0 bytes
   499 ;; Hardware stack levels used:    1
   500 ;; Hardware stack levels required when called:    2
   501 ;; This function calls:
   502 ;;		Nothing
   503 ;; This function is called by:
   504 ;;		_main
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508                           	psect	text4
   509  0009A0                     __ptext4:
   510                           	opt callstack 0
   511  0009A0                     _portInit:
   512                           	opt callstack 28
   513  0009A0  0E0F               	movlw	15
   514  0009A2  12C1               	iorwf	193,f,c	;volatile
   515  0009A4  0E70               	movlw	112
   516  0009A6  6ED3               	movwf	211,c	;volatile
   517  0009A8  9093               	bcf	147,0,c	;volatile
   518  0009AA  0012               	return		;funcret
   519  0009AC                     __end_of_portInit:
   520                           	opt callstack 0
   521                           
   522 ;; *************** function _UARTinit *****************
   523 ;; Defined at:
   524 ;;		line 5 in file "UART.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;		None
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      void 
   531 ;; Registers used:
   532 ;;		wreg, status,2
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   538 ;;      Params:         0       0       0       0       0       0       0       0       0
   539 ;;      Locals:         0       0       0       0       0       0       0       0       0
   540 ;;      Temps:          0       0       0       0       0       0       0       0       0
   541 ;;      Totals:         0       0       0       0       0       0       0       0       0
   542 ;;Total ram usage:        0 bytes
   543 ;; Hardware stack levels used:    1
   544 ;; Hardware stack levels required when called:    2
   545 ;; This function calls:
   546 ;;		Nothing
   547 ;; This function is called by:
   548 ;;		_main
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           	psect	text5
   553  000932                     __ptext5:
   554                           	opt callstack 0
   555  000932                     _UARTinit:
   556                           	opt callstack 28
   557  000932                     
   558                           ;UART.c: 6:     TRISCbits.RC6 = 1;
   559  000932  8C94               	bsf	148,6,c	;volatile
   560                           
   561                           ;UART.c: 7:     TRISCbits.RC7 = 1;
   562  000934  8E94               	bsf	148,7,c	;volatile
   563  000936                     
   564                           ;UART.c: 9:     SPBRG = 16;
   565  000936  0E10               	movlw	16
   566  000938  6EAF               	movwf	175,c	;volatile
   567  00093A                     
   568                           ;UART.c: 10:     TXSTA1bits.BRGH = 1;
   569  00093A  84AC               	bsf	172,2,c	;volatile
   570  00093C                     
   571                           ;UART.c: 11:     BAUDCONbits.BRG16 = 1;
   572  00093C  86B8               	bsf	184,3,c	;volatile
   573  00093E                     
   574                           ;UART.c: 13:     TXSTA1bits.TX9 = 0;
   575  00093E  9CAC               	bcf	172,6,c	;volatile
   576  000940                     
   577                           ;UART.c: 14:     TXSTA1bits.TXEN = 1;
   578  000940  8AAC               	bsf	172,5,c	;volatile
   579  000942                     
   580                           ;UART.c: 15:     TXSTA1bits.SYNC = 0;
   581  000942  98AC               	bcf	172,4,c	;volatile
   582  000944                     
   583                           ;UART.c: 16:     RCSTA1bits.SPEN = 1;
   584  000944  8EAB               	bsf	171,7,c	;volatile
   585  000946                     
   586                           ;UART.c: 17:     RCSTA1bits.RX9 = 0;
   587  000946  9CAB               	bcf	171,6,c	;volatile
   588  000948                     
   589                           ;UART.c: 18:     RCSTA1bits.CREN = 1;
   590  000948  88AB               	bsf	171,4,c	;volatile
   591  00094A  0012               	return		;funcret
   592  00094C                     __end_of_UARTinit:
   593                           	opt callstack 0
   594                           
   595 ;; *************** function _PWM_CCP2_init *****************
   596 ;; Defined at:
   597 ;;		line 4 in file "PWMCCP2.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;		None
   600 ;; Auto vars:     Size  Location     Type
   601 ;;		None
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      void 
   604 ;; Registers used:
   605 ;;		wreg, status,2
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   611 ;;      Params:         0       0       0       0       0       0       0       0       0
   612 ;;      Locals:         0       0       0       0       0       0       0       0       0
   613 ;;      Temps:          0       0       0       0       0       0       0       0       0
   614 ;;      Totals:         0       0       0       0       0       0       0       0       0
   615 ;;Total ram usage:        0 bytes
   616 ;; Hardware stack levels used:    1
   617 ;; Hardware stack levels required when called:    2
   618 ;; This function calls:
   619 ;;		Nothing
   620 ;; This function is called by:
   621 ;;		_main
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           	psect	text6
   626  000962                     __ptext6:
   627                           	opt callstack 0
   628  000962                     _PWM_CCP2_init:
   629                           	opt callstack 28
   630  000962                     
   631                           ;PWMCCP2.c: 5:     TRISCbits.RC1 = 0;
   632  000962  9294               	bcf	148,1,c	;volatile
   633  000964                     
   634                           ;PWMCCP2.c: 6:     CCP2CONbits.CCP2M = 0b1111;
   635  000964  0E0F               	movlw	15
   636  000966  12BA               	iorwf	186,f,c	;volatile
   637                           
   638                           ;PWMCCP2.c: 7:     PR2 = 124;
   639  000968  0E7C               	movlw	124
   640  00096A  6ECB               	movwf	203,c	;volatile
   641                           
   642                           ;PWMCCP2.c: 8:     T2CONbits.T2CKPS = 0b11;
   643  00096C  0E03               	movlw	3
   644  00096E  12CA               	iorwf	202,f,c	;volatile
   645                           
   646                           ;PWMCCP2.c: 9:     TMR2 = 0;
   647  000970  0E00               	movlw	0
   648  000972  6ECC               	movwf	204,c	;volatile
   649  000974                     
   650                           ;PWMCCP2.c: 10:     T2CONbits.TMR2ON = 1;
   651  000974  84CA               	bsf	202,2,c	;volatile
   652  000976  0012               	return		;funcret
   653  000978                     __end_of_PWM_CCP2_init:
   654                           	opt callstack 0
   655                           
   656 ;; *************** function _PWM_CCP1_init *****************
   657 ;; Defined at:
   658 ;;		line 4 in file "PWMCCP1.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;		None
   661 ;; Auto vars:     Size  Location     Type
   662 ;;		None
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, status,2
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   672 ;;      Params:         0       0       0       0       0       0       0       0       0
   673 ;;      Locals:         0       0       0       0       0       0       0       0       0
   674 ;;      Temps:          0       0       0       0       0       0       0       0       0
   675 ;;      Totals:         0       0       0       0       0       0       0       0       0
   676 ;;Total ram usage:        0 bytes
   677 ;; Hardware stack levels used:    1
   678 ;; Hardware stack levels required when called:    2
   679 ;; This function calls:
   680 ;;		Nothing
   681 ;; This function is called by:
   682 ;;		_main
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           	psect	text7
   687  000978                     __ptext7:
   688                           	opt callstack 0
   689  000978                     _PWM_CCP1_init:
   690                           	opt callstack 28
   691  000978                     
   692                           ;PWMCCP1.c: 5:     TRISCbits.RC2 = 0;
   693  000978  9494               	bcf	148,2,c	;volatile
   694  00097A                     
   695                           ;PWMCCP1.c: 6:     CCP1CONbits.CCP1M = 0b1111;
   696  00097A  0E0F               	movlw	15
   697  00097C  12BD               	iorwf	189,f,c	;volatile
   698                           
   699                           ;PWMCCP1.c: 7:     PR2 = 124;
   700  00097E  0E7C               	movlw	124
   701  000980  6ECB               	movwf	203,c	;volatile
   702                           
   703                           ;PWMCCP1.c: 8:     T2CONbits.T2CKPS = 0b11;
   704  000982  0E03               	movlw	3
   705  000984  12CA               	iorwf	202,f,c	;volatile
   706                           
   707                           ;PWMCCP1.c: 9:     TMR2 = 0;
   708  000986  0E00               	movlw	0
   709  000988  6ECC               	movwf	204,c	;volatile
   710  00098A                     
   711                           ;PWMCCP1.c: 10:     T2CONbits.TMR2ON = 1;
   712  00098A  84CA               	bsf	202,2,c	;volatile
   713  00098C  0012               	return		;funcret
   714  00098E                     __end_of_PWM_CCP1_init:
   715                           	opt callstack 0
   716                           
   717 ;; *************** function _ADCvalue *****************
   718 ;; Defined at:
   719 ;;		line 18 in file "ADC.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  valorADC        2    5[COMRAM] unsigned int 
   724 ;; Return value:  Size  Location     Type
   725 ;;                  2    1[COMRAM] unsigned int 
   726 ;; Registers used:
   727 ;;		wreg, status,2, status,0
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   733 ;;      Params:         2       0       0       0       0       0       0       0       0
   734 ;;      Locals:         2       0       0       0       0       0       0       0       0
   735 ;;      Temps:          2       0       0       0       0       0       0       0       0
   736 ;;      Totals:         6       0       0       0       0       0       0       0       0
   737 ;;Total ram usage:        6 bytes
   738 ;; Hardware stack levels used:    1
   739 ;; Hardware stack levels required when called:    2
   740 ;; This function calls:
   741 ;;		Nothing
   742 ;; This function is called by:
   743 ;;		_main
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           	psect	text8
   748  0008EC                     __ptext8:
   749                           	opt callstack 0
   750  0008EC                     _ADCvalue:
   751                           	opt callstack 28
   752  0008EC                     
   753                           ;ADC.c: 19:     ADCON0bits.GO_DONE = 1;
   754  0008EC  82C2               	bsf	194,1,c	;volatile
   755  0008EE                     l146:
   756                           
   757                           ;ADC.c: 20:     while (ADCON0bits.GO_DONE == 1) {
   758  0008EE  B2C2               	btfsc	194,1,c	;volatile
   759  0008F0  EF7C  F004         	goto	u101
   760  0008F4  EF7E  F004         	goto	u100
   761  0008F8                     u101:
   762  0008F8  EF77  F004         	goto	l146
   763  0008FC                     u100:
   764  0008FC                     
   765                           ;ADC.c: 22:     unsigned int valorADC = ADRESL + (ADRESH << 8);
   766  0008FC  50C4               	movf	196,w,c	;volatile
   767  0008FE  6E05               	movwf	(??_ADCvalue+1)^0,c
   768  000900  6A04               	clrf	??_ADCvalue^0,c
   769  000902  50C3               	movf	195,w,c	;volatile
   770  000904  2404               	addwf	??_ADCvalue^0,w,c
   771  000906  6E06               	movwf	ADCvalue@valorADC^0,c
   772  000908  0E00               	movlw	0
   773  00090A  2005               	addwfc	(??_ADCvalue+1)^0,w,c
   774  00090C  6E07               	movwf	(ADCvalue@valorADC+1)^0,c
   775  00090E                     
   776                           ;ADC.c: 23:     return valorADC;
   777  00090E  C006  F002         	movff	ADCvalue@valorADC,?_ADCvalue
   778  000912  C007  F003         	movff	ADCvalue@valorADC+1,?_ADCvalue+1
   779  000916  0012               	return		;funcret
   780  000918                     __end_of_ADCvalue:
   781                           	opt callstack 0
   782                           
   783 ;; *************** function _ADCinit *****************
   784 ;; Defined at:
   785 ;;		line 5 in file "ADC.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;		None
   790 ;; Return value:  Size  Location     Type
   791 ;;                  1    wreg      void 
   792 ;; Registers used:
   793 ;;		wreg, status,2
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   799 ;;      Params:         0       0       0       0       0       0       0       0       0
   800 ;;      Locals:         0       0       0       0       0       0       0       0       0
   801 ;;      Temps:          0       0       0       0       0       0       0       0       0
   802 ;;      Totals:         0       0       0       0       0       0       0       0       0
   803 ;;Total ram usage:        0 bytes
   804 ;; Hardware stack levels used:    1
   805 ;; Hardware stack levels required when called:    2
   806 ;; This function calls:
   807 ;;		Nothing
   808 ;; This function is called by:
   809 ;;		_main
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           	psect	text9
   814  0008BC                     __ptext9:
   815                           	opt callstack 0
   816  0008BC                     _ADCinit:
   817                           	opt callstack 28
   818  0008BC                     
   819                           ;ADC.c: 6:     ADCON0bits.CHS = 0b0000;
   820  0008BC  0EC3               	movlw	-61
   821  0008BE  16C2               	andwf	194,f,c	;volatile
   822                           
   823                           ;ADC.c: 7:     ADCON1bits.VCFG = 0;
   824  0008C0  0ECF               	movlw	-49
   825  0008C2  16C1               	andwf	193,f,c	;volatile
   826                           
   827                           ;ADC.c: 8:     ADCON1bits.PCFG = 0b1110;
   828  0008C4  50C1               	movf	193,w,c	;volatile
   829  0008C6  0BF0               	andlw	-16
   830  0008C8  090E               	iorlw	14
   831  0008CA  6EC1               	movwf	193,c	;volatile
   832  0008CC                     
   833                           ;ADC.c: 9:     ADCON2bits.ADFM = 1;
   834  0008CC  8EC0               	bsf	192,7,c	;volatile
   835                           
   836                           ;ADC.c: 10:     ADCON2bits.ACQT = 0b100;
   837  0008CE  50C0               	movf	192,w,c	;volatile
   838  0008D0  0BC7               	andlw	-57
   839  0008D2  0920               	iorlw	32
   840  0008D4  6EC0               	movwf	192,c	;volatile
   841                           
   842                           ;ADC.c: 11:     ADCON2bits.ADCS = 0b100;
   843  0008D6  50C0               	movf	192,w,c	;volatile
   844  0008D8  0BF8               	andlw	-8
   845  0008DA  0904               	iorlw	4
   846  0008DC  6EC0               	movwf	192,c	;volatile
   847                           
   848                           ;ADC.c: 12:     ADRESH = 0;
   849  0008DE  0E00               	movlw	0
   850  0008E0  6EC4               	movwf	196,c	;volatile
   851                           
   852                           ;ADC.c: 13:     ADRESL = 0;
   853  0008E2  0E00               	movlw	0
   854  0008E4  6EC3               	movwf	195,c	;volatile
   855  0008E6                     
   856                           ;ADC.c: 14:     TRISAbits.TRISA0 = 1;
   857  0008E6  8092               	bsf	146,0,c	;volatile
   858  0008E8                     
   859                           ;ADC.c: 15:     ADCON0bits.ADON = 1;
   860  0008E8  80C2               	bsf	194,0,c	;volatile
   861  0008EA  0012               	return		;funcret
   862  0008EC                     __end_of_ADCinit:
   863                           	opt callstack 0
   864                           
   865 ;; *************** function _low_isr *****************
   866 ;; Defined at:
   867 ;;		line 15 in file "PruebaADC.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;		None
   870 ;; Auto vars:     Size  Location     Type
   871 ;;		None
   872 ;; Return value:  Size  Location     Type
   873 ;;                  1    wreg      void 
   874 ;; Registers used:
   875 ;;		None
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   881 ;;      Params:         0       0       0       0       0       0       0       0       0
   882 ;;      Locals:         0       0       0       0       0       0       0       0       0
   883 ;;      Temps:          1       0       0       0       0       0       0       0       0
   884 ;;      Totals:         1       0       0       0       0       0       0       0       0
   885 ;;Total ram usage:        1 bytes
   886 ;; Hardware stack levels used:    1
   887 ;; Hardware stack levels required when called:    1
   888 ;; This function calls:
   889 ;;		Nothing
   890 ;; This function is called by:
   891 ;;		Interrupt level 1
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	intcodelo
   896  000018                     __pintcodelo:
   897                           	opt callstack 0
   898  000018                     _low_isr:
   899                           	opt callstack 27
   900                           
   901                           ;incstack = 0
   902  000018  800B               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   903  00001A  CFE0 F001          	movff	bsr,??_low_isr
   904  00001E                     
   905                           ;PruebaADC.c: 16:     __nop();
   906  00001E  F000               	nop	
   907  000020  C001  FFE0         	movff	??_low_isr,bsr
   908  000024  900B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   909  000026  0010               	retfie	
   910  000028                     __end_of_low_isr:
   911                           	opt callstack 0
   912                           
   913 ;; *************** function _high_isr *****************
   914 ;; Defined at:
   915 ;;		line 10 in file "PruebaADC.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;		None
   918 ;; Auto vars:     Size  Location     Type
   919 ;;		None
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      void 
   922 ;; Registers used:
   923 ;;		None
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   929 ;;      Params:         0       0       0       0       0       0       0       0       0
   930 ;;      Locals:         0       0       0       0       0       0       0       0       0
   931 ;;      Temps:          0       0       0       0       0       0       0       0       0
   932 ;;      Totals:         0       0       0       0       0       0       0       0       0
   933 ;;Total ram usage:        0 bytes
   934 ;; Hardware stack levels used:    1
   935 ;; This function calls:
   936 ;;		Nothing
   937 ;; This function is called by:
   938 ;;		Interrupt level 2
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           	psect	intcode
   943  000008                     __pintcode:
   944                           	opt callstack 0
   945  000008                     _high_isr:
   946                           	opt callstack 27
   947                           
   948                           ;incstack = 0
   949  000008  820B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   950  00000A  EDD6  F004         	call	int_func,f	;refresh shadow registers
   951                           
   952                           	psect	intcode_body
   953  0009AC                     __pintcode_body:
   954                           	opt callstack 27
   955  0009AC                     int_func:
   956                           	opt callstack 27
   957  0009AC  0006               	pop		; remove dummy address from shadow register refresh
   958  0009AE                     
   959                           ;PruebaADC.c: 11:     __nop();
   960  0009AE  F000               	nop	
   961  0009B0  920B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   962  0009B2  0011               	retfie		f
   963  0009B4                     __end_of_high_isr:
   964                           	opt callstack 0
   965                           
   966                           	psect	rparam
   967  0000                     
   968                           	psect	temp
   969  00000B                     btemp:
   970                           	opt callstack 0
   971  00000B                     	ds	1
   972  0000                     int$flags	set	btemp
   973  0000                     wtemp8	set	btemp+1
   974  0000                     ttemp5	set	btemp+1
   975  0000                     ttemp6	set	btemp+4
   976  0000                     ttemp7	set	btemp+8
   977                           tosu	equ	0xFFF
   978                           tosh	equ	0xFFE
   979                           tosl	equ	0xFFD
   980                           stkptr	equ	0xFFC
   981                           pclatu	equ	0xFFB
   982                           pclath	equ	0xFFA
   983                           pcl	equ	0xFF9
   984                           tblptru	equ	0xFF8
   985                           tblptrh	equ	0xFF7
   986                           tblptrl	equ	0xFF6
   987                           tablat	equ	0xFF5
   988                           prodh	equ	0xFF4
   989                           prodl	equ	0xFF3
   990                           indf0	equ	0xFEF
   991                           postinc0	equ	0xFEE
   992                           postdec0	equ	0xFED
   993                           preinc0	equ	0xFEC
   994                           plusw0	equ	0xFEB
   995                           fsr0h	equ	0xFEA
   996                           fsr0l	equ	0xFE9
   997                           wreg	equ	0xFE8
   998                           indf1	equ	0xFE7
   999                           postinc1	equ	0xFE6
  1000                           postdec1	equ	0xFE5
  1001                           preinc1	equ	0xFE4
  1002                           plusw1	equ	0xFE3
  1003                           fsr1h	equ	0xFE2
  1004                           fsr1l	equ	0xFE1
  1005                           bsr	equ	0xFE0
  1006                           indf2	equ	0xFDF
  1007                           postinc2	equ	0xFDE
  1008                           postdec2	equ	0xFDD
  1009                           preinc2	equ	0xFDC
  1010                           plusw2	equ	0xFDB
  1011                           fsr2h	equ	0xFDA
  1012                           fsr2l	equ	0xFD9
  1013                           status	equ	0xFD8


Data Sizes:
    Strings     2
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     10      10
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    printf@PointString	PTR unsigned char  size(2) Largest target is 2
		 -> STR_1(CODE[2]), 


Critical Paths under _main in COMRAM

    _main->_ADCvalue
    _main->_printf
    _printf->_send

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     347
                                              7 COMRAM     3     3      0
                            _ADCinit
                           _ADCvalue
                      _PWM_CCP1_init
                      _PWM_CCP2_init
                           _UARTinit
                           _portInit
                             _printf
                            _receive
                               _send
 ---------------------------------------------------------------------------------
 (1) _receive                                              1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _printf                                               5     3      2     225
                                              2 COMRAM     5     3      2
                               _send
 ---------------------------------------------------------------------------------
 (1) _send                                                 1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _portInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UARTinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_CCP2_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_CCP1_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCvalue                                             6     4      2      23
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ADCinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _low_isr                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCinit
   _ADCvalue
   _PWM_CCP1_init
   _PWM_CCP2_init
   _UARTinit
   _portInit
   _printf
     _send
   _receive
   _send

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      A       A       1       10.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Nov 21 16:10:04 2019

                      l9 09AA                       l31 0918                       l40 0960  
                     l33 0926                       l34 0930                       l28 094A  
                     l37 094E                       l47 0862                       l68 0976  
                     l86 098C                       u10 095C                       u11 0958  
                     u20 0926                       u21 0922                       u80 0830  
                     u81 082C                       u90 0862                       u91 085E  
                     bsr 000FE0                      l124 0878                      l143 08EA  
                    l146 08EE                      l149 0916                      l831 09A8  
                    l841 093E                      l833 0932                      l825 094E  
                    l851 0948                      l843 0940                      l835 0936  
                    l827 095C                      l845 0942                      l837 093A  
                    l829 09A0                      l853 0918                      l847 0944  
                    l839 093C                      l943 0804                      l855 092A  
                    l961 08EC                      l881 0974                      l849 0946  
                    l891 08CC                      l963 08FC                      l883 0978  
                    l955 0834                      l971 087E                      l893 08E6  
                    l965 090E                      l885 097A                      l877 0962  
                    l957 0850                      l949 0808                      l981 08B4  
                    l973 0890                      l895 08E8                      l887 098A  
                    l879 0964                      l959 0852                      l975 089C  
                    l889 08BC                      l977 08A2                      l969 0864  
                    l979 08AE                      u100 08FC                      u101 08F8  
                    u110 0890                      u111 088C                      _PR2 000FCB  
             _TXSTA1bits 000FAC          __end_of_ADCinit 08EC             __CFG_LVP$OFF 000000  
                   STR_1 0801              main@entrada 0008                     _TMR2 000FCC  
                   _main 0864                     _send 094C                     btemp 000B  
                   start 0028         __end_of_ADCvalue 0918             ___param_bank 000000  
                  ?_main 0001                    ?_send 0001                    i1l119 0020  
                  i2l114 09B0                    i1l927 001E                    i2l925 09AE  
                  _SPBRG 000FAF         __end_of_UARTinit 094C             main@valorADC 0009  
        __end_of_receive 0932          __end_of_low_isr 0028          ??_PWM_CCP1_init 0002  
        ??_PWM_CCP2_init 0002                    tablat 000FF5                    ttemp5 000C  
                  ttemp6 000F                    ttemp7 0013                    status 000FD8  
                  wtemp8 000C           __CFG_MCLRE$OFF 000000          __initialization 098E  
           __end_of_main 08BC             __end_of_send 0962                ??_ADCinit 0002  
                 ??_main 0008                   ??_send 0002            __activetblptr 000001  
       ADCvalue@valorADC 0006                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _CCPR1L 000FBE                   _CCPR2L 000FBB                   _RCREG1 000FAE  
                 _OSCCON 000FD3                   _TXREG1 000FAD         __end_of_high_isr 09B4  
                 _printf 0804                ??_receive 0002             __mediumconst 0000  
       __end_of_portInit 09AC                ??_low_isr 0001                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ?_ADCvalue 0002  
             __accesstop 0060  __end_of__initialization 098E            ___rparam_used 000001  
         __pcstackCOMRAM 0001                ?_UARTinit 0001               ??_ADCvalue 0004  
             ??_UARTinit 0002                  ?_printf 0003                  _ADCinit 08BC  
              ?_high_isr 0001                  __Hparam 0000                  __Lparam 0000  
              ?_portInit 0001             __psmallconst 0800                  __pcinit 098E  
                __ramtop 0800                  __ptext0 0864                  __ptext1 0918  
                __ptext2 0804                  __ptext3 094C                  __ptext4 09A0  
                __ptext5 0932                  __ptext6 0962                  __ptext7 0978  
                __ptext8 08EC                  __ptext9 08BC          __size_of_printf 0060  
              _T2CONbits 000FCA                  _receive 0918                  _low_isr 0018  
             ??_high_isr 0001           __pintcode_body 09AC     end_of_initialization 098E  
  __end_of_PWM_CCP1_init 098E                  int_func 09AC    __end_of_PWM_CCP2_init 0978  
                printf@i 0007               ??_portInit 0002          receive@recibido 0002  
              _TRISAbits 000F92                _TRISBbits 000F93                _TRISCbits 000F94  
      __size_of_ADCvalue 002C              _CCP1CONbits 000FBD              _CCP2CONbits 000FBA  
            _BAUDCONbits 000FB8        __size_of_UARTinit 001A           __end_of_printf 0864  
    start_initialization 098E                 ??_printf 0005                 ?_ADCinit 0001  
           send@enviarpc 0002        __size_of_high_isr 09AC                __pintcode 0008  
            __pintcodelo 0018        __size_of_portInit 000C              __smallconst 0800  
               ?_receive 0001                 ?_low_isr 0001                 _ADCvalue 08EC  
               _PIR1bits 000F9E                 _UARTinit 0932               _ADCON0bits 000FC2  
             _ADCON1bits 000FC1               _ADCON2bits 000FC0         __size_of_ADCinit 0030  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 0800  
 __size_of_PWM_CCP1_init 0016        printf@PointString 0003   __size_of_PWM_CCP2_init 0016  
       __size_of_receive 001A         __size_of_low_isr 0010                 _high_isr 0008  
          __size_of_main 0058            __size_of_send 0016                 _portInit 09A0  
               int$flags 000B                 intlevel1 0000                 intlevel2 0000  
          _PWM_CCP1_init 0978            _PWM_CCP2_init 0962               _RCSTA1bits 000FAB  
    __CFG_FOSC$INTOSC_EC 000000           ?_PWM_CCP1_init 0001           ?_PWM_CCP2_init 0001  



Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Nov 25 15:38:26 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22  0000                     
    23                           ; Version 2.10
    24                           ; Generated 31/07/2019 GMT
    25                           ; 
    26                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4550 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     _TMR1	set	4046
    58  0000                     _TMR0	set	4054
    59  0000                     _T1CONbits	set	4045
    60  0000                     _T0CONbits	set	4053
    61  0000                     _INTCON3bits	set	4080
    62  0000                     _INTCON2bits	set	4081
    63  0000                     _INTCONbits	set	4082
    64  0000                     _RCONbits	set	4048
    65  0000                     _ADRESL	set	4035
    66  0000                     _ADRESH	set	4036
    67  0000                     _ADCON2bits	set	4032
    68  0000                     _ADCON0bits	set	4034
    69  0000                     _CCPR1L	set	4030
    70  0000                     _CCP1CONbits	set	4029
    71  0000                     _CCPR2L	set	4027
    72  0000                     _TMR2	set	4044
    73  0000                     _T2CONbits	set	4042
    74  0000                     _PR2	set	4043
    75  0000                     _CCP2CONbits	set	4026
    76  0000                     _TXREG1	set	4013
    77  0000                     _RCREG1	set	4014
    78  0000                     _PIR1bits	set	3998
    79  0000                     _RCSTA1bits	set	4011
    80  0000                     _BAUDCONbits	set	4024
    81  0000                     _TXSTA1bits	set	4012
    82  0000                     _SPBRG	set	4015
    83  0000                     _LATCbits	set	3979
    84  0000                     _LATDbits	set	3980
    85  0000                     _TRISCbits	set	3988
    86  0000                     _TRISDbits	set	3989
    87  0000                     _LATAbits	set	3977
    88  0000                     _TRISAbits	set	3986
    89  0000                     _TRISBbits	set	3987
    90  0000                     _OSCCON	set	4051
    91  0000                     _ADCON1bits	set	4033
    92                           
    93                           	psect	smallconst
    94  000800                     __psmallconst:
    95                           	opt callstack 0
    96  000800  00                 	db	0
    97  000801                     STR_1:
    98  000801  45                 	db	69	;'E'
    99  000802  6C                 	db	108	;'l'
   100  000803  20                 	db	32
   101  000804  76                 	db	118	;'v'
   102  000805  61                 	db	97	;'a'
   103  000806  6C                 	db	108	;'l'
   104  000807  6F                 	db	111	;'o'
   105  000808  72                 	db	114	;'r'
   106  000809  20                 	db	32
   107  00080A  64                 	db	100	;'d'
   108  00080B  65                 	db	101	;'e'
   109  00080C  6C                 	db	108	;'l'
   110  00080D  20                 	db	32
   111  00080E  54                 	db	84	;'T'
   112  00080F  4D                 	db	77	;'M'
   113  000810  52                 	db	82	;'R'
   114  000811  30                 	db	48	;'0'
   115  000812  20                 	db	32
   116  000813  65                 	db	101	;'e'
   117  000814  73                 	db	115	;'s'
   118  000815  20                 	db	32
   119  000816  64                 	db	100	;'d'
   120  000817  65                 	db	101	;'e'
   121  000818  3A                 	db	58	;':'
   122  000819  00                 	db	0
   123  00081A                     STR_2:
   124  00081A  52                 	db	82	;'R'
   125  00081B  65                 	db	101	;'e'
   126  00081C  73                 	db	115	;'s'
   127  00081D  65                 	db	101	;'e'
   128  00081E  74                 	db	116	;'t'
   129  00081F  65                 	db	101	;'e'
   130  000820  65                 	db	101	;'e'
   131  000821  20                 	db	32
   132  000822  65                 	db	101	;'e'
   133  000823  73                 	db	115	;'s'
   134  000824  74                 	db	116	;'t'
   135  000825  65                 	db	101	;'e'
   136  000826  20                 	db	32
   137  000827  70                 	db	112	;'p'
   138  000828  65                 	db	101	;'e'
   139  000829  64                 	db	100	;'d'
   140  00082A  6F                 	db	111	;'o'
   141  00082B  20                 	db	32
   142  00082C  73                 	db	115	;'s'
   143  00082D  61                 	db	97	;'a'
   144  00082E  6C                 	db	108	;'l'
   145  00082F  75                 	db	117	;'u'
   146  000830  32                 	db	50	;'2'
   147  000831  00                 	db	0
   148                           
   149                           ; #config settings
   150  000832  00                 	db	0	; dummy byte at the end
   151  0000                     
   152                           	psect	cinit
   153  0009BE                     __pcinit:
   154                           	opt callstack 0
   155  0009BE                     start_initialization:
   156                           	opt callstack 0
   157  0009BE                     __initialization:
   158                           	opt callstack 0
   159  0009BE                     end_of_initialization:
   160                           	opt callstack 0
   161  0009BE                     __end_of__initialization:
   162                           	opt callstack 0
   163  0009BE  900B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   164  0009C0  920B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   165  0009C2  0E00               	movlw	low (__Lsmallconst shr (0+16))
   166  0009C4  6EF8               	movwf	tblptru,c
   167  0009C6  0E08               	movlw	high __Lsmallconst
   168  0009C8  6EF7               	movwf	tblptrh,c
   169  0009CA  0100               	movlb	0
   170  0009CC  EF1A  F004         	goto	_main	;jump to C main() function
   171                           
   172                           	psect	cstackCOMRAM
   173  000001                     __pcstackCOMRAM:
   174                           	opt callstack 0
   175  000001                     ??_low_isr:
   176  000001                     
   177                           ; 1 bytes @ 0x0
   178  000001                     	ds	1
   179  000002                     receive@recibido:
   180                           	opt callstack 0
   181  000002                     send@enviarpc:
   182                           	opt callstack 0
   183                           
   184                           ; 1 bytes @ 0x1
   185  000002                     	ds	1
   186  000003                     printf@PointString:
   187                           	opt callstack 0
   188                           
   189                           ; 2 bytes @ 0x2
   190  000003                     	ds	2
   191  000005                     ??_printf:
   192                           
   193                           ; 1 bytes @ 0x4
   194  000005                     	ds	2
   195  000007                     printf@i:
   196                           	opt callstack 0
   197                           
   198                           ; 1 bytes @ 0x6
   199  000007                     	ds	1
   200  000008                     ??_main:
   201                           
   202                           ; 1 bytes @ 0x7
   203  000008                     	ds	1
   204  000009                     main@i:
   205                           	opt callstack 0
   206                           
   207                           ; 1 bytes @ 0x8
   208  000009                     	ds	1
   209  00000A                     main@leer:
   210                           	opt callstack 0
   211                           
   212                           ; 1 bytes @ 0x9
   213  00000A                     	ds	1
   214                           
   215 ;;
   216 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   217 ;;
   218 ;; *************** function _main *****************
   219 ;; Defined at:
   220 ;;		line 26 in file "PruebaTimers.c"
   221 ;; Parameters:    Size  Location     Type
   222 ;;		None
   223 ;; Auto vars:     Size  Location     Type
   224 ;;  i               1    8[COMRAM] unsigned char 
   225 ;;  leer            1    9[COMRAM] unsigned char 
   226 ;; Return value:  Size  Location     Type
   227 ;;                  1    wreg      void 
   228 ;; Registers used:
   229 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   230 ;; Tracked objects:
   231 ;;		On entry : 0/0
   232 ;;		On exit  : 0/0
   233 ;;		Unchanged: 0/0
   234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   235 ;;      Params:         0       0       0       0       0       0       0       0       0
   236 ;;      Locals:         2       0       0       0       0       0       0       0       0
   237 ;;      Temps:          1       0       0       0       0       0       0       0       0
   238 ;;      Totals:         3       0       0       0       0       0       0       0       0
   239 ;;Total ram usage:        3 bytes
   240 ;; Hardware stack levels required when called:    4
   241 ;; This function calls:
   242 ;;		_UARTinit
   243 ;;		_portInit
   244 ;;		_printf
   245 ;;		_receive
   246 ;;		_send
   247 ;;		_tmr0Init
   248 ;;		_tmr1Init
   249 ;; This function is called by:
   250 ;;		Startup code after reset
   251 ;; This function uses a non-reentrant model
   252 ;;
   253                           
   254                           	psect	text0
   255  000834                     __ptext0:
   256                           	opt callstack 0
   257  000834                     _main:
   258                           	opt callstack 27
   259  000834                     
   260                           ;PruebaTimers.c: 27:     portInit();
   261  000834  ECE8  F004         	call	_portInit	;wreg free
   262                           
   263                           ;PruebaTimers.c: 28:     UARTinit();
   264  000838  ECBC  F004         	call	_UARTinit	;wreg free
   265  00083C                     
   266                           ;PruebaTimers.c: 37:     TRISDbits.RD1 = 0;
   267  00083C  9295               	bcf	149,1,c	;volatile
   268  00083E                     
   269                           ;PruebaTimers.c: 38:     LATDbits.LATD1 = 0;
   270  00083E  928C               	bcf	140,1,c	;volatile
   271  000840                     
   272                           ;PruebaTimers.c: 39:     TRISCbits.RC1 = 0;
   273  000840  9294               	bcf	148,1,c	;volatile
   274  000842                     
   275                           ;PruebaTimers.c: 40:     LATCbits.LATC1 = 1;
   276  000842  828B               	bsf	139,1,c	;volatile
   277                           
   278                           ;PruebaTimers.c: 42:     tmr1Init();
   279  000844  ECA2  F004         	call	_tmr1Init	;wreg free
   280                           
   281                           ;PruebaTimers.c: 43:     tmr0Init();
   282  000848  ECC9  F004         	call	_tmr0Init	;wreg free
   283  00084C                     l194:
   284                           
   285                           ;PruebaTimers.c: 46:         unsigned char leer = receive();
   286  00084C  ECAF  F004         	call	_receive	;wreg free
   287  000850  6E0A               	movwf	main@leer^0,c
   288  000852                     
   289                           ;PruebaTimers.c: 47:         if (leer == '0') {
   290  000852  0E30               	movlw	48
   291  000854  180A               	xorwf	main@leer^0,w,c
   292  000856  A4D8               	btfss	status,2,c
   293  000858  EF30  F004         	goto	u121
   294  00085C  EF32  F004         	goto	u120
   295  000860                     u121:
   296  000860  EF5B  F004         	goto	l1109
   297  000864                     u120:
   298  000864                     
   299                           ;PruebaTimers.c: 48:             printf("El valor del TMR0 es de:");
   300  000864  0E01               	movlw	low STR_1
   301  000866  6E03               	movwf	printf@PointString^0,c
   302  000868  0E08               	movlw	high STR_1
   303  00086A  6E04               	movwf	(printf@PointString+1)^0,c
   304  00086C  EC72  F004         	call	_printf	;wreg free
   305  000870                     
   306                           ;PruebaTimers.c: 49:             for (unsigned char i = 0; i < 10; i++) {
   307  000870  0E00               	movlw	0
   308  000872  6E09               	movwf	main@i^0,c
   309  000874                     l196:
   310                           
   311                           ;PruebaTimers.c: 50:                 LATDbits.LATD1 = 1;
   312  000874  828C               	bsf	140,1,c	;volatile
   313  000876                     
   314                           ;PruebaTimers.c: 51:                 _delay((unsigned long)((1)*(8000000/4000.0)));
   315  000876  0E03               	movlw	3
   316  000878  6E08               	movwf	??_main^0,c
   317  00087A  0E98               	movlw	152
   318  00087C                     u157:
   319  00087C  2EE8               	decfsz	wreg,f,c
   320  00087E  D7FE               	bra	u157
   321  000880  2E08               	decfsz	??_main^0,f,c
   322  000882  D7FC               	bra	u157
   323  000884                     
   324                           ;PruebaTimers.c: 52:                 LATDbits.LATD1 = 0;
   325  000884  928C               	bcf	140,1,c	;volatile
   326                           
   327                           ;PruebaTimers.c: 53:                  _delay((unsigned long)((1)*(8000000/4000.0)));
   328  000886  0E03               	movlw	3
   329  000888  6E08               	movwf	??_main^0,c
   330  00088A  0E98               	movlw	152
   331  00088C                     u167:
   332  00088C  2EE8               	decfsz	wreg,f,c
   333  00088E  D7FE               	bra	u167
   334  000890  2E08               	decfsz	??_main^0,f,c
   335  000892  D7FC               	bra	u167
   336  000894                     
   337                           ;PruebaTimers.c: 55:             }
   338  000894  2A09               	incf	main@i^0,f,c
   339  000896  0E09               	movlw	9
   340  000898  6409               	cpfsgt	main@i^0,c
   341  00089A  EF51  F004         	goto	u131
   342  00089E  EF53  F004         	goto	u130
   343  0008A2                     u131:
   344  0008A2  EF3A  F004         	goto	l196
   345  0008A6                     u130:
   346  0008A6                     
   347                           ;PruebaTimers.c: 56:             send(TMR0);
   348  0008A6  50D6               	movf	214,w,c	;volatile
   349  0008A8  ECD4  F004         	call	_send
   350  0008AC                     
   351                           ;PruebaTimers.c: 57:             send('\n');
   352  0008AC  0E0A               	movlw	10
   353  0008AE  ECD4  F004         	call	_send
   354  0008B2                     
   355                           ;PruebaTimers.c: 58:             leer = 0;
   356  0008B2  0E00               	movlw	0
   357  0008B4  6E0A               	movwf	main@leer^0,c
   358  0008B6                     l1109:
   359                           
   360                           ;PruebaTimers.c: 60:         if (leer == '1') {
   361  0008B6  0E31               	movlw	49
   362  0008B8  180A               	xorwf	main@leer^0,w,c
   363  0008BA  A4D8               	btfss	status,2,c
   364  0008BC  EF62  F004         	goto	u141
   365  0008C0  EF64  F004         	goto	u140
   366  0008C4                     u141:
   367  0008C4  EF26  F004         	goto	l194
   368  0008C8                     u140:
   369  0008C8                     
   370                           ;PruebaTimers.c: 61:             TMR0 = 0;
   371  0008C8  0E00               	movlw	0
   372  0008CA  6ED7               	movwf	215,c	;volatile
   373  0008CC  0E00               	movlw	0
   374  0008CE  6ED6               	movwf	214,c	;volatile
   375  0008D0                     
   376                           ;PruebaTimers.c: 62:             printf("Resetee este pedo salu2");
   377  0008D0  0E1A               	movlw	low STR_2
   378  0008D2  6E03               	movwf	printf@PointString^0,c
   379  0008D4  0E08               	movlw	high STR_2
   380  0008D6  6E04               	movwf	(printf@PointString+1)^0,c
   381  0008D8  EC72  F004         	call	_printf	;wreg free
   382  0008DC  EF26  F004         	goto	l194
   383  0008E0  EF14  F000         	goto	start
   384  0008E4                     __end_of_main:
   385                           	opt callstack 0
   386                           
   387 ;; *************** function _tmr1Init *****************
   388 ;; Defined at:
   389 ;;		line 16 in file "Timers.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;		None
   392 ;; Auto vars:     Size  Location     Type
   393 ;;		None
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, status,2
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   403 ;;      Params:         0       0       0       0       0       0       0       0       0
   404 ;;      Locals:         0       0       0       0       0       0       0       0       0
   405 ;;      Temps:          0       0       0       0       0       0       0       0       0
   406 ;;      Totals:         0       0       0       0       0       0       0       0       0
   407 ;;Total ram usage:        0 bytes
   408 ;; Hardware stack levels used:    1
   409 ;; Hardware stack levels required when called:    2
   410 ;; This function calls:
   411 ;;		Nothing
   412 ;; This function is called by:
   413 ;;		_main
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417                           	psect	text1
   418  000944                     __ptext1:
   419                           	opt callstack 0
   420  000944                     _tmr1Init:
   421                           	opt callstack 28
   422  000944                     
   423                           ;Timers.c: 18:     T1CONbits.TMR1ON = 0;
   424  000944  90CD               	bcf	205,0,c	;volatile
   425                           
   426                           ;Timers.c: 19:     T1CONbits.RD16 = 1;
   427  000946  8ECD               	bsf	205,7,c	;volatile
   428                           
   429                           ;Timers.c: 20:     T1CONbits.T1OSCEN = 0;
   430  000948  96CD               	bcf	205,3,c	;volatile
   431                           
   432                           ;Timers.c: 21:     T1CONbits.T1RUN = 1;
   433  00094A  8CCD               	bsf	205,6,c	;volatile
   434                           
   435                           ;Timers.c: 22:     T1CONbits.TMR1CS = 1;
   436  00094C  82CD               	bsf	205,1,c	;volatile
   437                           
   438                           ;Timers.c: 23:     T1CONbits.T1SYNC = 1;
   439  00094E  84CD               	bsf	205,2,c	;volatile
   440                           
   441                           ;Timers.c: 24:     TRISCbits.RC0 = 1;
   442  000950  8094               	bsf	148,0,c	;volatile
   443  000952                     
   444                           ;Timers.c: 25:     TMR1 = 0;
   445  000952  0E00               	movlw	0
   446  000954  6ECF               	movwf	207,c	;volatile
   447  000956  0E00               	movlw	0
   448  000958  6ECE               	movwf	206,c	;volatile
   449  00095A                     
   450                           ;Timers.c: 26:     T1CONbits.TMR1ON = 1;
   451  00095A  80CD               	bsf	205,0,c	;volatile
   452  00095C  0012               	return		;funcret
   453  00095E                     __end_of_tmr1Init:
   454                           	opt callstack 0
   455                           
   456 ;; *************** function _tmr0Init *****************
   457 ;; Defined at:
   458 ;;		line 5 in file "Timers.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;		None
   461 ;; Auto vars:     Size  Location     Type
   462 ;;		None
   463 ;; Return value:  Size  Location     Type
   464 ;;                  1    wreg      void 
   465 ;; Registers used:
   466 ;;		wreg, status,2
   467 ;; Tracked objects:
   468 ;;		On entry : 0/0
   469 ;;		On exit  : 0/0
   470 ;;		Unchanged: 0/0
   471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   472 ;;      Params:         0       0       0       0       0       0       0       0       0
   473 ;;      Locals:         0       0       0       0       0       0       0       0       0
   474 ;;      Temps:          0       0       0       0       0       0       0       0       0
   475 ;;      Totals:         0       0       0       0       0       0       0       0       0
   476 ;;Total ram usage:        0 bytes
   477 ;; Hardware stack levels used:    1
   478 ;; Hardware stack levels required when called:    2
   479 ;; This function calls:
   480 ;;		Nothing
   481 ;; This function is called by:
   482 ;;		_main
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486                           	psect	text2
   487  000992                     __ptext2:
   488                           	opt callstack 0
   489  000992                     _tmr0Init:
   490                           	opt callstack 28
   491  000992                     
   492                           ;Timers.c: 7:     T0CONbits.TMR0ON = 0;
   493  000992  9ED5               	bcf	213,7,c	;volatile
   494                           
   495                           ;Timers.c: 8:     T0CONbits.T08BIT = 0;
   496  000994  9CD5               	bcf	213,6,c	;volatile
   497                           
   498                           ;Timers.c: 9:     T0CONbits.T0CS = 1;
   499  000996  8AD5               	bsf	213,5,c	;volatile
   500                           
   501                           ;Timers.c: 10:     T0CONbits.T0SE = 0;
   502  000998  98D5               	bcf	213,4,c	;volatile
   503                           
   504                           ;Timers.c: 11:     TRISAbits.RA4 = 1;
   505  00099A  8892               	bsf	146,4,c	;volatile
   506  00099C                     
   507                           ;Timers.c: 12:     TMR0 = 0;
   508  00099C  0E00               	movlw	0
   509  00099E  6ED7               	movwf	215,c	;volatile
   510  0009A0  0E00               	movlw	0
   511  0009A2  6ED6               	movwf	214,c	;volatile
   512  0009A4                     
   513                           ;Timers.c: 13:     T0CONbits.TMR0ON = 1;
   514  0009A4  8ED5               	bsf	213,7,c	;volatile
   515  0009A6  0012               	return		;funcret
   516  0009A8                     __end_of_tmr0Init:
   517                           	opt callstack 0
   518                           
   519 ;; *************** function _receive *****************
   520 ;; Defined at:
   521 ;;		line 21 in file "UART.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;		None
   524 ;; Auto vars:     Size  Location     Type
   525 ;;  recibido        1    1[COMRAM] unsigned char 
   526 ;; Return value:  Size  Location     Type
   527 ;;                  1    wreg      unsigned char 
   528 ;; Registers used:
   529 ;;		wreg, status,2
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   535 ;;      Params:         0       0       0       0       0       0       0       0       0
   536 ;;      Locals:         1       0       0       0       0       0       0       0       0
   537 ;;      Temps:          0       0       0       0       0       0       0       0       0
   538 ;;      Totals:         1       0       0       0       0       0       0       0       0
   539 ;;Total ram usage:        1 bytes
   540 ;; Hardware stack levels used:    1
   541 ;; Hardware stack levels required when called:    2
   542 ;; This function calls:
   543 ;;		Nothing
   544 ;; This function is called by:
   545 ;;		_main
   546 ;;		_scanf
   547 ;; This function uses a non-reentrant model
   548 ;;
   549                           
   550                           	psect	text3
   551  00095E                     __ptext3:
   552                           	opt callstack 0
   553  00095E                     _receive:
   554                           	opt callstack 28
   555  00095E                     l49:
   556                           
   557                           ;UART.c: 23:     while (PIR1bits.RCIF == 0) {
   558  00095E  AA9E               	btfss	158,5,c	;volatile
   559  000960  EFB4  F004         	goto	u21
   560  000964  EFB6  F004         	goto	u20
   561  000968                     u21:
   562  000968  EFAF  F004         	goto	l49
   563  00096C                     u20:
   564  00096C                     
   565                           ;UART.c: 26:     recibido = RCREG1;
   566  00096C  CFAE F002          	movff	4014,receive@recibido	;volatile
   567  000970                     
   568                           ;UART.c: 27:     RCREG1 = 0;
   569  000970  0E00               	movlw	0
   570  000972  6EAE               	movwf	174,c	;volatile
   571                           
   572                           ;UART.c: 28:     return recibido;
   573  000974  5002               	movf	receive@recibido^0,w,c
   574  000976  0012               	return		;funcret
   575  000978                     __end_of_receive:
   576                           	opt callstack 0
   577                           
   578 ;; *************** function _printf *****************
   579 ;; Defined at:
   580 ;;		line 5 in file "Comunicacion.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;  PointString     2    2[COMRAM] PTR unsigned char 
   583 ;;		 -> STR_2(24), STR_1(25), 
   584 ;; Auto vars:     Size  Location     Type
   585 ;;  i               1    6[COMRAM] unsigned char 
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   595 ;;      Params:         2       0       0       0       0       0       0       0       0
   596 ;;      Locals:         1       0       0       0       0       0       0       0       0
   597 ;;      Temps:          2       0       0       0       0       0       0       0       0
   598 ;;      Totals:         5       0       0       0       0       0       0       0       0
   599 ;;Total ram usage:        5 bytes
   600 ;; Hardware stack levels used:    1
   601 ;; Hardware stack levels required when called:    3
   602 ;; This function calls:
   603 ;;		_send
   604 ;; This function is called by:
   605 ;;		_main
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           
   609                           	psect	text4
   610  0008E4                     __ptext4:
   611                           	opt callstack 0
   612  0008E4                     _printf:
   613                           	opt callstack 27
   614  0008E4                     
   615                           ;Comunicacion.c: 6:     for (unsigned char i = 0; i < 255; i++) {
   616  0008E4  0E00               	movlw	0
   617  0008E6  6E07               	movwf	printf@i^0,c
   618  0008E8                     l1065:
   619                           
   620                           ;Comunicacion.c: 7:         if (PointString[i] == ((void*)0)) {
   621  0008E8  5007               	movf	printf@i^0,w,c
   622  0008EA  2403               	addwf	printf@PointString^0,w,c
   623  0008EC  6E05               	movwf	??_printf^0,c
   624  0008EE  0E00               	movlw	0
   625  0008F0  2004               	addwfc	(printf@PointString+1)^0,w,c
   626  0008F2  6E06               	movwf	(??_printf+1)^0,c
   627  0008F4  C005  FFF6         	movff	??_printf,tblptrl
   628  0008F8  C006  FFF7         	movff	??_printf+1,tblptrh
   629  0008FC                     	if	0	;tblptru may be non-zero
   630  0008FC                     	endif
   631  0008FC                     	if	0	;tblptru may be non-zero
   632  0008FC                     	endif
   633  0008FC  0008               	tblrd		*
   634  0008FE  50F5               	movf	tablat,w,c
   635  000900  0900               	iorlw	0
   636  000902  A4D8               	btfss	status,2,c
   637  000904  EF86  F004         	goto	u101
   638  000908  EF88  F004         	goto	u100
   639  00090C                     u101:
   640  00090C  EF8A  F004         	goto	l1071
   641  000910                     u100:
   642  000910  EFA1  F004         	goto	l145
   643  000914                     l1071:
   644                           
   645                           ;Comunicacion.c: 10:             send(PointString[i]);
   646  000914  5007               	movf	printf@i^0,w,c
   647  000916  2403               	addwf	printf@PointString^0,w,c
   648  000918  6E05               	movwf	??_printf^0,c
   649  00091A  0E00               	movlw	0
   650  00091C  2004               	addwfc	(printf@PointString+1)^0,w,c
   651  00091E  6E06               	movwf	(??_printf+1)^0,c
   652  000920  C005  FFF6         	movff	??_printf,tblptrl
   653  000924  C006  FFF7         	movff	??_printf+1,tblptrh
   654  000928                     	if	0	;tblptru may be non-zero
   655  000928                     	endif
   656  000928                     	if	0	;tblptru may be non-zero
   657  000928                     	endif
   658  000928  0008               	tblrd		*
   659  00092A  50F5               	movf	tablat,w,c
   660  00092C  ECD4  F004         	call	_send
   661  000930                     
   662                           ;Comunicacion.c: 11:     }
   663  000930  2A07               	incf	printf@i^0,f,c
   664  000932  2807               	incf	printf@i^0,w,c
   665  000934  A4D8               	btfss	status,2,c
   666  000936  EF9F  F004         	goto	u111
   667  00093A  EFA1  F004         	goto	u110
   668  00093E                     u111:
   669  00093E  EF74  F004         	goto	l1065
   670  000942                     u110:
   671  000942                     l145:
   672  000942  0012               	return		;funcret
   673  000944                     __end_of_printf:
   674                           	opt callstack 0
   675                           
   676 ;; *************** function _send *****************
   677 ;; Defined at:
   678 ;;		line 31 in file "UART.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;  enviarpc        1    wreg     unsigned char 
   681 ;; Auto vars:     Size  Location     Type
   682 ;;  enviarpc        1    1[COMRAM] unsigned char 
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		wreg
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   692 ;;      Params:         0       0       0       0       0       0       0       0       0
   693 ;;      Locals:         1       0       0       0       0       0       0       0       0
   694 ;;      Temps:          0       0       0       0       0       0       0       0       0
   695 ;;      Totals:         1       0       0       0       0       0       0       0       0
   696 ;;Total ram usage:        1 bytes
   697 ;; Hardware stack levels used:    1
   698 ;; Hardware stack levels required when called:    2
   699 ;; This function calls:
   700 ;;		Nothing
   701 ;; This function is called by:
   702 ;;		_printf
   703 ;;		_main
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           	psect	text5
   708  0009A8                     __ptext5:
   709                           	opt callstack 0
   710  0009A8                     _send:
   711                           	opt callstack 28
   712                           
   713                           ;incstack = 0
   714                           ;send@enviarpc stored from wreg
   715  0009A8  6E02               	movwf	send@enviarpc^0,c
   716  0009AA                     l55:
   717                           
   718                           ;UART.c: 32:     while (TXSTA1bits.TRMT == 0) {
   719  0009AA  A2AC               	btfss	172,1,c	;volatile
   720  0009AC  EFDA  F004         	goto	u11
   721  0009B0  EFDC  F004         	goto	u10
   722  0009B4                     u11:
   723  0009B4  EFD5  F004         	goto	l55
   724  0009B8                     u10:
   725  0009B8                     
   726                           ;UART.c: 35:     TXREG1 = enviarpc;
   727  0009B8  C002  FFAD         	movff	send@enviarpc,4013	;volatile
   728  0009BC  0012               	return		;funcret
   729  0009BE                     __end_of_send:
   730                           	opt callstack 0
   731                           
   732 ;; *************** function _portInit *****************
   733 ;; Defined at:
   734 ;;		line 10 in file "Gpio.c"
   735 ;; Parameters:    Size  Location     Type
   736 ;;		None
   737 ;; Auto vars:     Size  Location     Type
   738 ;;		None
   739 ;; Return value:  Size  Location     Type
   740 ;;                  1    wreg      void 
   741 ;; Registers used:
   742 ;;		wreg, status,2
   743 ;; Tracked objects:
   744 ;;		On entry : 0/0
   745 ;;		On exit  : 0/0
   746 ;;		Unchanged: 0/0
   747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   748 ;;      Params:         0       0       0       0       0       0       0       0       0
   749 ;;      Locals:         0       0       0       0       0       0       0       0       0
   750 ;;      Temps:          0       0       0       0       0       0       0       0       0
   751 ;;      Totals:         0       0       0       0       0       0       0       0       0
   752 ;;Total ram usage:        0 bytes
   753 ;; Hardware stack levels used:    1
   754 ;; Hardware stack levels required when called:    2
   755 ;; This function calls:
   756 ;;		Nothing
   757 ;; This function is called by:
   758 ;;		_main
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           	psect	text6
   763  0009D0                     __ptext6:
   764                           	opt callstack 0
   765  0009D0                     _portInit:
   766                           	opt callstack 28
   767  0009D0                     
   768                           ;Gpio.c: 11:     LATAbits.LATA3 = 0;
   769  0009D0  0E0F               	movlw	15
   770  0009D2  12C1               	iorwf	193,f,c	;volatile
   771                           
   772                           ;Gpio.c: 12: 
   773  0009D4  0E70               	movlw	112
   774  0009D6  6ED3               	movwf	211,c	;volatile
   775  0009D8                     
   776                           ;Gpio.c: 13:     TRISDbits.RD0 = 0;
   777  0009D8  9093               	bcf	147,0,c	;volatile
   778  0009DA  0012               	return		;funcret
   779  0009DC                     __end_of_portInit:
   780                           	opt callstack 0
   781                           
   782 ;; *************** function _UARTinit *****************
   783 ;; Defined at:
   784 ;;		line 5 in file "UART.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;		None
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg, status,2
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   798 ;;      Params:         0       0       0       0       0       0       0       0       0
   799 ;;      Locals:         0       0       0       0       0       0       0       0       0
   800 ;;      Temps:          0       0       0       0       0       0       0       0       0
   801 ;;      Totals:         0       0       0       0       0       0       0       0       0
   802 ;;Total ram usage:        0 bytes
   803 ;; Hardware stack levels used:    1
   804 ;; Hardware stack levels required when called:    2
   805 ;; This function calls:
   806 ;;		Nothing
   807 ;; This function is called by:
   808 ;;		_main
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	text7
   813  000978                     __ptext7:
   814                           	opt callstack 0
   815  000978                     _UARTinit:
   816                           	opt callstack 28
   817  000978                     
   818                           ;UART.c: 6:     TRISCbits.RC6 = 1;
   819  000978  8C94               	bsf	148,6,c	;volatile
   820                           
   821                           ;UART.c: 7:     TRISCbits.RC7 = 1;
   822  00097A  8E94               	bsf	148,7,c	;volatile
   823  00097C                     
   824                           ;UART.c: 9:     SPBRG = 16;
   825  00097C  0E10               	movlw	16
   826  00097E  6EAF               	movwf	175,c	;volatile
   827  000980                     
   828                           ;UART.c: 10:     TXSTA1bits.BRGH = 1;
   829  000980  84AC               	bsf	172,2,c	;volatile
   830  000982                     
   831                           ;UART.c: 11:     BAUDCONbits.BRG16 = 1;
   832  000982  86B8               	bsf	184,3,c	;volatile
   833  000984                     
   834                           ;UART.c: 13:     TXSTA1bits.TX9 = 0;
   835  000984  9CAC               	bcf	172,6,c	;volatile
   836  000986                     
   837                           ;UART.c: 14:     TXSTA1bits.TXEN = 1;
   838  000986  8AAC               	bsf	172,5,c	;volatile
   839  000988                     
   840                           ;UART.c: 15:     TXSTA1bits.SYNC = 0;
   841  000988  98AC               	bcf	172,4,c	;volatile
   842  00098A                     
   843                           ;UART.c: 16:     RCSTA1bits.SPEN = 1;
   844  00098A  8EAB               	bsf	171,7,c	;volatile
   845  00098C                     
   846                           ;UART.c: 17:     RCSTA1bits.RX9 = 0;
   847  00098C  9CAB               	bcf	171,6,c	;volatile
   848  00098E                     
   849                           ;UART.c: 18:     RCSTA1bits.CREN = 1;
   850  00098E  88AB               	bsf	171,4,c	;volatile
   851  000990  0012               	return		;funcret
   852  000992                     __end_of_UARTinit:
   853                           	opt callstack 0
   854                           
   855 ;; *************** function _low_isr *****************
   856 ;; Defined at:
   857 ;;		line 22 in file "PruebaTimers.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;		None
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		None
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   871 ;;      Params:         0       0       0       0       0       0       0       0       0
   872 ;;      Locals:         0       0       0       0       0       0       0       0       0
   873 ;;      Temps:          1       0       0       0       0       0       0       0       0
   874 ;;      Totals:         1       0       0       0       0       0       0       0       0
   875 ;;Total ram usage:        1 bytes
   876 ;; Hardware stack levels used:    1
   877 ;; Hardware stack levels required when called:    1
   878 ;; This function calls:
   879 ;;		Nothing
   880 ;; This function is called by:
   881 ;;		Interrupt level 1
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           	psect	intcodelo
   886  000018                     __pintcodelo:
   887                           	opt callstack 0
   888  000018                     _low_isr:
   889                           	opt callstack 27
   890                           
   891                           ;incstack = 0
   892  000018  800B               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   893  00001A  CFE0 F001          	movff	bsr,??_low_isr
   894  00001E                     
   895                           ;PruebaTimers.c: 23:     __nop();
   896  00001E  F000               	nop	
   897  000020  C001  FFE0         	movff	??_low_isr,bsr
   898  000024  900B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   899  000026  0010               	retfie	
   900  000028                     __end_of_low_isr:
   901                           	opt callstack 0
   902                           
   903 ;; *************** function _high_isr *****************
   904 ;; Defined at:
   905 ;;		line 16 in file "PruebaTimers.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;		None
   908 ;; Auto vars:     Size  Location     Type
   909 ;;		None
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		None
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   919 ;;      Params:         0       0       0       0       0       0       0       0       0
   920 ;;      Locals:         0       0       0       0       0       0       0       0       0
   921 ;;      Temps:          0       0       0       0       0       0       0       0       0
   922 ;;      Totals:         0       0       0       0       0       0       0       0       0
   923 ;;Total ram usage:        0 bytes
   924 ;; Hardware stack levels used:    1
   925 ;; This function calls:
   926 ;;		Nothing
   927 ;; This function is called by:
   928 ;;		Interrupt level 2
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	intcode
   933  000008                     __pintcode:
   934                           	opt callstack 0
   935  000008                     _high_isr:
   936                           	opt callstack 27
   937                           
   938                           ;incstack = 0
   939  000008  820B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   940  00000A  EDEE  F004         	call	int_func,f	;refresh shadow registers
   941                           
   942                           	psect	intcode_body
   943  0009DC                     __pintcode_body:
   944                           	opt callstack 27
   945  0009DC                     int_func:
   946                           	opt callstack 27
   947  0009DC  0006               	pop		; remove dummy address from shadow register refresh
   948  0009DE                     
   949                           ;PruebaTimers.c: 17:     __nop();
   950  0009DE  F000               	nop	
   951  0009E0  920B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   952  0009E2  0011               	retfie		f
   953  0009E4                     __end_of_high_isr:
   954                           	opt callstack 0
   955                           
   956                           	psect	rparam
   957  0000                     
   958                           	psect	temp
   959  00000B                     btemp:
   960                           	opt callstack 0
   961  00000B                     	ds	1
   962  0000                     int$flags	set	btemp
   963  0000                     wtemp8	set	btemp+1
   964  0000                     ttemp5	set	btemp+1
   965  0000                     ttemp6	set	btemp+4
   966  0000                     ttemp7	set	btemp+8
   967                           tosu	equ	0xFFF
   968                           tosh	equ	0xFFE
   969                           tosl	equ	0xFFD
   970                           stkptr	equ	0xFFC
   971                           pclatu	equ	0xFFB
   972                           pclath	equ	0xFFA
   973                           pcl	equ	0xFF9
   974                           tblptru	equ	0xFF8
   975                           tblptrh	equ	0xFF7
   976                           tblptrl	equ	0xFF6
   977                           tablat	equ	0xFF5
   978                           prodh	equ	0xFF4
   979                           prodl	equ	0xFF3
   980                           indf0	equ	0xFEF
   981                           postinc0	equ	0xFEE
   982                           postdec0	equ	0xFED
   983                           preinc0	equ	0xFEC
   984                           plusw0	equ	0xFEB
   985                           fsr0h	equ	0xFEA
   986                           fsr0l	equ	0xFE9
   987                           wreg	equ	0xFE8
   988                           indf1	equ	0xFE7
   989                           postinc1	equ	0xFE6
   990                           postdec1	equ	0xFE5
   991                           preinc1	equ	0xFE4
   992                           plusw1	equ	0xFE3
   993                           fsr1h	equ	0xFE2
   994                           fsr1l	equ	0xFE1
   995                           bsr	equ	0xFE0
   996                           indf2	equ	0xFDF
   997                           postinc2	equ	0xFDE
   998                           postdec2	equ	0xFDD
   999                           preinc2	equ	0xFDC
  1000                           plusw2	equ	0xFDB
  1001                           fsr2h	equ	0xFDA
  1002                           fsr2l	equ	0xFD9
  1003                           status	equ	0xFD8


Data Sizes:
    Strings     49
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     10      10
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    printf@PointString	PTR unsigned char  size(2) Largest target is 25
		 -> STR_2(CODE[24]), STR_1(CODE[25]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_send

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     424
                                              7 COMRAM     3     3      0
                           _UARTinit
                           _portInit
                             _printf
                            _receive
                               _send
                           _tmr0Init
                           _tmr1Init
 ---------------------------------------------------------------------------------
 (1) _tmr1Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tmr0Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _receive                                              1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _printf                                               5     3      2     301
                                              2 COMRAM     5     3      2
                               _send
 ---------------------------------------------------------------------------------
 (1) _send                                                 1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _portInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UARTinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _low_isr                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UARTinit
   _portInit
   _printf
     _send
   _receive
   _send
   _tmr0Init
   _tmr1Init

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      A       A       1       10.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Nov 25 15:38:26 2019

                     l21 09DA                       l51 096C                       l52 0976  
                     l46 0990                       l55 09AA                       l49 095E  
                     l58 09BC                       u10 09B8                       u11 09B4  
                     u20 096C                       u21 0968                       bsr 000FE0  
                    l216 09A6                      l145 0942                      l219 095C  
                    l194 084C                      l196 0874                      l901 09D8  
                    l911 0984                      l903 0978                      l921 098E  
                    l913 0986                      l905 097C                      l915 0988  
                    l907 0980                      l923 095E                      l917 098A  
                    l909 0982                      l925 0970                      l919 098C  
                    l951 095A                      l953 0992                      l955 099C  
                    l947 0944                      l957 09A4                      l949 0952  
                    l895 09AA                      l897 09B8                      l899 09D0  
                    u100 0910                      u101 090C                      u110 0942  
                    u111 093E                      u120 0864                      u121 0860  
                    u130 08A6                      u131 08A2                      u140 08C8  
                    u141 08C4                      u157 087C                      _PR2 000FCB  
                    u167 088C                      wreg 000FE8               _TXSTA1bits 000FAC  
           __CFG_LVP$OFF 000000                     l1101 0894                     l1111 08C8  
                   l1103 08A6                     l1113 08D0                     l1105 08AC  
                   l1115 08DC                     l1107 08B2                     l1109 08B6  
                   l1071 0914                     l1073 0930                     l1065 08E8  
                   l1081 083E                     l1075 0932                     l1059 08E4  
                   l1091 0870                     l1083 0840                     l1085 0842  
                   l1077 0834                     l1087 0852                     l1079 083C  
                   l1097 0876                     l1089 0864                     l1099 0884  
                   STR_1 0801                     STR_2 081A                     _TMR0 000FD6  
                   _TMR1 000FCE                     _TMR2 000FCC                     _main 0834  
                   _send 09A8                     btemp 000B                     start 0028  
           ___param_bank 000000                    ?_main 0001                    ?_send 0001  
                  i1l189 0020                    i2l184 09E0                    _SPBRG 000FAF  
       __end_of_UARTinit 0992          __end_of_receive 0978                    main@i 0009  
        __end_of_low_isr 0028                    tablat 000FF5                    ttemp5 000C  
                  ttemp6 000F                    ttemp7 0013                    status 000FD8  
                  wtemp8 000C           __CFG_MCLRE$OFF 000000          __initialization 09BE  
           __end_of_main 08E4             __end_of_send 09BE                   ??_main 0008  
                 ??_send 0002            __activetblptr 000001                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   _CCPR1L 000FBE                   _CCPR2L 000FBB  
                 i1l1017 001E                   i2l1015 09DE                   _RCREG1 000FAE  
                 _OSCCON 000FD3                   _TXREG1 000FAD         __end_of_high_isr 09E4  
                 _printf 08E4         __end_of_tmr0Init 09A8         __end_of_tmr1Init 095E  
              ??_receive 0002             __mediumconst 0000         __end_of_portInit 09DC  
              ??_low_isr 0001                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 09BE  
          ___rparam_used 000001           __pcstackCOMRAM 0001                ?_UARTinit 0001  
             ??_UARTinit 0002                  ?_printf 0003                ?_high_isr 0001  
              ?_tmr0Init 0001                ?_tmr1Init 0001                  __Hparam 0000  
                __Lparam 0000                ?_portInit 0001             __psmallconst 0800  
                __pcinit 09BE                  __ramtop 0800                  __ptext0 0834  
                __ptext1 0944                  __ptext2 0992                  __ptext3 095E  
                __ptext4 08E4                  __ptext5 09A8                  __ptext6 09D0  
                __ptext7 0978          __size_of_printf 0060                _T0CONbits 000FD5  
              _T1CONbits 000FCD                _T2CONbits 000FCA                  _receive 095E  
                _low_isr 0018               ??_high_isr 0001           __pintcode_body 09DC  
   end_of_initialization 09BE                  int_func 09DC               ??_tmr0Init 0002  
             ??_tmr1Init 0002                  printf@i 0007               ??_portInit 0002  
        receive@recibido 0002                _TRISAbits 000F92                _TRISBbits 000F93  
              _TRISCbits 000F94                _TRISDbits 000F95              _CCP1CONbits 000FBD  
            _CCP2CONbits 000FBA              _BAUDCONbits 000FB8        __size_of_UARTinit 001A  
         __end_of_printf 0944      start_initialization 09BE                 ??_printf 0005  
           send@enviarpc 0002        __size_of_high_isr 09DC        __size_of_tmr0Init 0016  
      __size_of_tmr1Init 001A                __pintcode 0008              __pintcodelo 0018  
      __size_of_portInit 000C              __smallconst 0800                 ?_receive 0001  
               ?_low_isr 0001                 _LATAbits 000F89                 _LATCbits 000F8B  
               _LATDbits 000F8C                 _PIR1bits 000F9E                 _RCONbits 000FD0  
               _UARTinit 0978               _ADCON0bits 000FC2               _ADCON1bits 000FC1  
             _ADCON2bits 000FC0              _INTCON2bits 000FF1              _INTCON3bits 000FF0  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 0800  
      printf@PointString 0003         __size_of_receive 001A         __size_of_low_isr 0010  
               _high_isr 0008            __size_of_main 00B0            __size_of_send 0016  
               _tmr0Init 0992                 _tmr1Init 0944                 _portInit 09D0  
               int$flags 000B                 main@leer 000A               _INTCONbits 000FF2  
               intlevel1 0000                 intlevel2 0000               _RCSTA1bits 000FAB  
    __CFG_FOSC$INTOSC_EC 000000  
